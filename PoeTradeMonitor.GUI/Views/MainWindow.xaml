<Window x:Class="PoeTradeMonitor.GUI.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:poeLib="clr-namespace:PoeLib;assembly=PoeLib"
        mc:Ignorable="d"
        Title="PoeTradeMonitor" Height="700" Width="1850" Icon="../exalted.ico" Loaded="Window_Loaded">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="boolToVis" />
        <ObjectDataProvider x:Key="strictnessEnum" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="poeLib:Strictness"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="serviceLocation" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="poeLib:ServiceLocation"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="indexerEnum" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="poeLib:Indexer"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <Style x:Key="CustomDataGridRowStyle" TargetType="{x:Type DataGridRow}">
            <Setter Property="BorderThickness" Value="0,0,0,1" />
            <Setter Property="BorderBrush" Value="DarkGray"/>
            <Setter Property="Tag" Value="{Binding DataContext, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu>
                        <MenuItem Header="Enable"
                              Command="{Binding PlacementTarget.Tag.EnableSearchItemCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                              CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                        <MenuItem Header="Disable"
                              Command="{Binding PlacementTarget.Tag.DisableSearchItemCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                              CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                        <MenuItem Header="Edit"
                              Command="{Binding PlacementTarget.Tag.EditSearchItemCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                              CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                        <MenuItem Header="Search"
                              Command="{Binding PlacementTarget.Tag.OpenSearchInBrowserCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                              CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                        <MenuItem Header="Remove"
                              Command="{Binding PlacementTarget.Tag.RemoveSearchItemCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                              CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    </ContextMenu>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="R" Modifiers="Control" Command="{Binding ReloadDataCommand, IsAsync=True}" />
        <KeyBinding Key="Q" Modifiers="Control" Command="{Binding ExitCommand}" />
    </Window.InputBindings>
    <Grid Margin="5">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250"/>
            <ColumnDefinition Width="130"/>
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto"/>
            <RowDefinition />
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Menu Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3">
            <MenuItem Header="_File">
                <MenuItem Header="_Reload Data" InputGestureText="Ctrl+R" Command="{Binding ReloadDataCommand}" />
                <Separator />
                <MenuItem Header="_Quit" InputGestureText="Ctrl+Q" Command="{Binding ExitCommand}" />
            </MenuItem>
            <MenuItem Header="_Settings">
                <MenuItem>
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock VerticalAlignment="Center" Margin="0,0,5,0">League:</TextBlock>
                            <ComboBox Width="120" ItemsSource="{Binding LeagueList}" SelectedItem="{Binding SelectedLeague, Mode=TwoWay}" />
                        </StackPanel>
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem>
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock VerticalAlignment="Center" Margin="0,0,5,0">Strictness:</TextBlock>
                            <ComboBox Width="120" ItemsSource="{Binding Source={StaticResource strictnessEnum}}" SelectedItem="{Binding Strictness, Mode=TwoWay}" />
                        </StackPanel>
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem>
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock VerticalAlignment="Center" Margin="0,0,5,0">Service Location:</TextBlock>
                            <ComboBox Width="120" ItemsSource="{Binding Source={StaticResource serviceLocation}}" SelectedItem="{Binding ServiceLocation, Mode=TwoWay}" />
                        </StackPanel>
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem Header="_High Margin Mode Enabled" IsCheckable="True" IsChecked="{Binding HighMarginMode, Mode=TwoWay}" />
                <MenuItem Header="_AntiAFK Enabled" IsCheckable="True" IsChecked="{Binding AntiAFKEnabled, Mode=TwoWay}" />
                <MenuItem Header="_Price Logger Enabled" IsCheckable="True" IsChecked="{Binding PriceLoggerEnabled, Mode=TwoWay}" />
                <MenuItem Header="_Auto-Reply" IsCheckable="True" IsChecked="{Binding AutoreplyEnabled, Mode=TwoWay}" Command="{Binding AutoReplyUpdated}" />
                <MenuItem Header="_Alerts Enabled" IsCheckable="True" IsChecked="{Binding AlertsEnabled, Mode=TwoWay}" />
                <MenuItem Header="_Dealfinder Enabled" IsCheckable="True" Command="{Binding DealfinderEnabledChangedCommand}" IsChecked="{Binding DealfinderEnabled, Mode=TwoWay}" />
                <MenuItem Header="_Trade Confirmation Enabled" IsCheckable="True" IsChecked="{Binding TradeConfirmationEnabled, Mode=TwoWay}" />
                <MenuItem Header="_Unattended Mode Enabled" IsCheckable="True" IsChecked="{Binding UnattendedModeEnabled, Mode=TwoWay}" />
                <MenuItem Header="_Running" IsCheckable="True" IsChecked="{Binding Running, Mode=TwoWay}" />
            </MenuItem>
        </Menu>
        <TextBlock Grid.Column="0" Grid.Row="1" FontSize="16">
            <Run Text="Searches: "/>
            <Run Text="{Binding EnabledSearchCount, Mode=OneWay}"/>
        </TextBlock>
        <TextBlock Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2" FontSize="16">New Items</TextBlock>
        <DataGrid Grid.Column="0" Grid.Row="2" Margin="0,0,5,0" IsReadOnly="True" AutoGenerateColumns="False" CanUserAddRows="False" CanUserResizeColumns="False" CanUserResizeRows="False" RowStyle="{StaticResource CustomDataGridRowStyle}" CurrentItem="{Binding CurrentSearchItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedSearchItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding SearchList}" FontSize="14" GridLinesVisibility="None" SelectionMode="Single" SelectionUnit="FullRow" RowHeaderWidth="0">
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Clear" Command="{Binding ClearSearchItemCommand}" />
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                    <Setter Property="BorderBrush" Value="DarkGray"/>
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Setter Property="BorderThickness" Value="0,0,1,0"/>
                    <Setter Property="BorderBrush" Value="DarkGray"/>
                    <Setter Property="Foreground" Value="Black" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{x:Null}" />
                            <Setter Property="BorderBrush" Value="DarkGray" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="*">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Enabled}" Value="True">
                                    <Setter Property="Foreground" Value="Black" />
                                    <Setter Property="Background" Value="Green"/>
                                    <Setter Property="BorderThickness" Value="0,0,0,1" />
                                    <Setter Property="BorderBrush" Value="DarkGray"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Enabled}" Value="False">
                                    <Setter Property="Foreground" Value="Black" />
                                    <Setter Property="Background" Value="OrangeRed"/>
                                    <Setter Property="BorderThickness" Value="0,0,0,1" />
                                    <Setter Property="BorderBrush" Value="DarkGray"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Price" Binding="{Binding OfferPrice, StringFormat='{}{0}'}" Width="80" />
            </DataGrid.Columns>
        </DataGrid>
        <Button Grid.Column="0" Grid.Row="3" FontSize="14" Margin="0,5,5,0" Content="Add Search" Command="{Binding AddSearchCommand}" />
        <DataGrid Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="2" Grid.RowSpan="2" Name="searchItemsGrid" IsReadOnly="True" AutoGenerateColumns="False" CanUserResizeColumns="False" CanUserResizeRows="False" CanUserAddRows="False" SelectedItem="{Binding SelectedStashGuiItem, Mode=TwoWay}" ItemsSource="{Binding StashGuiItems, Mode=TwoWay}" FontSize="14" GridLinesVisibility="None" RowHeaderWidth="0">
            <DataGrid.Resources>
                <ContextMenu x:Key="contextMenu">
                    <MenuItem Header="Buy" 
                  Command="{Binding PlacementTarget.Tag.BuyStashGuiItemCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" 
                  CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    <MenuItem Header="Ignore Account" 
                  Command="{Binding PlacementTarget.Tag.IgnoreAccountCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" 
                  CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    <MenuItem Header="Clear" 
                  Command="{Binding PlacementTarget.Tag.ClearStashGuiItemsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                </ContextMenu>
            </DataGrid.Resources>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Clear" Command="{Binding ClearStashGuiItemsCommand}" />
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                    <Setter Property="BorderBrush" Value="DarkGray"/>
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="BorderThickness" Value="0,0,0,1" />
                    <Setter Property="BorderBrush" Value="DarkGray"/>
                    <Setter Property="Tag" Value="{Binding DataContext, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>
                    <Setter Property="ContextMenu" Value="{StaticResource contextMenu}" />
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Setter Property="BorderThickness" Value="0,0,1,0"/>
                    <Setter Property="BorderBrush" Value="DarkGray"/>
                    <Setter Property="Foreground" Value="Black" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{x:Null}" />
                            <Setter Property="BorderBrush" Value="DarkGray" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Timestamp" Width="Auto" MinWidth="160" Binding="{Binding Timestamp}" />
                <DataGridTextColumn Header="Name" Width="Auto" MinWidth="240" Binding="{Binding Name}" />
                <DataGridTextColumn Header="Price" Width="Auto" MinWidth="90" Binding="{Binding Price}" />
                <DataGridTextColumn Header="Rarity" Width="Auto" MinWidth="90" Binding="{Binding Rarity}" />
                <DataGridTextColumn Header="Sockets" Width="Auto" MinWidth="60" Binding="{Binding NumSockets}" />
                <DataGridTextColumn Header="iLvl" Width="Auto" MinWidth="50" Binding="{Binding ItemLevel}" />
                <DataGridTextColumn Header="Mods" Width="*" MinWidth="280" Binding="{Binding ExplicitModsDisplayString}">
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Character" Width="Auto" MinWidth="130" Binding="{Binding Character}" />
                <DataGridTextColumn Header="Account" Width="Auto" MinWidth="130" Binding="{Binding Account}" />
                <DataGridTemplateColumn Header="Buy" MinWidth="80">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="Execute" IsEnabled="{Binding ExecuteEnabled}" Command="{Binding DataContext.ExecuteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" CommandParameter="{Binding}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Grid Grid.Column="2" Grid.Row="1" HorizontalAlignment="Left">
            <DockPanel>
                <Grid DockPanel.Dock="Left">
                    <TextBox Background="Green" Width="120" FontSize="14" HorizontalAlignment="Left" HorizontalContentAlignment="Center" VerticalAlignment="Center" Visibility="{Binding Connected, Mode=TwoWay, Converter={StaticResource boolToVis}}">Connected</TextBox>
                    <TextBox Background="OrangeRed" Width="120" FontSize="14" HorizontalAlignment="Left" HorizontalContentAlignment="Center" VerticalAlignment="Center" Visibility="{Binding Disconnected, Converter={StaticResource boolToVis}}">Disconnected</TextBox>
                </Grid>
                <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="50,0,0,0">
                    <TextBlock FontSize="14" Margin="0,0,5,0">Connected Time:</TextBlock>
                    <TextBlock FontSize="14" Text="{Binding ConnectedDuration}" />
                </StackPanel>
                <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="80,0,0,0">
                    <TextBlock FontSize="14" Margin="0,0,5,0">Currency:</TextBlock>
                    <TextBlock  HorizontalAlignment="Center" FontSize="14" Text="{Binding ChaosCount, StringFormat={}{0}c}" Margin="0,0,5,0"/>
                    <TextBlock  HorizontalAlignment="Center" FontSize="14" Text="{Binding DivineCount, StringFormat={}({0}div)}"/>
                </StackPanel>
                <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="80,0,0,0">
                    <TextBlock FontSize="14" Margin="0,0,5,0">Divine Rate:</TextBlock>
                    <TextBlock  HorizontalAlignment="Center" FontSize="14" Text="{Binding DivineRate, StringFormat={}{0}:1}"/>
                </StackPanel>
                <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="80,0,0,0">
                    <TextBlock FontSize="14" Margin="0,0,5,0">ItemsPerHour:</TextBlock>
                    <TextBlock  HorizontalAlignment="Center" FontSize="14" Text="{Binding StatisticsManager.TotalProcessedItemsPerHour, FallbackValue=0}"/>
                </StackPanel>
                <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="80,0,0,0">
                    <TextBlock FontSize="14" Margin="0,0,5,0">ItemCount:</TextBlock>
                    <TextBlock  HorizontalAlignment="Center" FontSize="14" Text="{Binding StatisticsManager.TotalProcessedItems}"/>
                </StackPanel>
                <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="80,0,0,0">
                    <TextBlock FontSize="14" Margin="0,0,5,0">ItemBacklog:</TextBlock>
                    <TextBlock  HorizontalAlignment="Center" FontSize="14" Text="{Binding StatisticsManager.ItemBacklog}"/>
                </StackPanel>
            </DockPanel>
        </Grid>
    </Grid>
</Window>